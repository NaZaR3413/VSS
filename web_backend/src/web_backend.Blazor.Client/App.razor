@using System.Reflection
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using BasicTheme = Volo.Abp.AspNetCore.Components.Web.BasicTheme.Themes.Basic

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly"
            AdditionalAssemblies="@_extraAssemblies">

        <Found Context="routeData">
            @* ①  Let the built-in RemoteAuthenticatorView deal with all
                   /authentication/{action} routes (login, logout, profile …) *@
            @if (routeData.PageType == typeof(RemoteAuthenticatorView))
            {
                <RemoteAuthenticatorView
                    Action="@(routeData.RouteValues["action"]?.ToString())" />

            }
            else
            {
                @* ② All other routes go through the normal auth pipeline *@
                <AuthorizeRouteView RouteData="@routeData"
                                    DefaultLayout="@typeof(MainLayout)">
                    <NotAuthorized Context="naCtx">
                        @if (!(naCtx.User?.Identity?.IsAuthenticated ?? false))
                        {
                            <BasicTheme.RedirectToLogin />
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <h4>Not authorized</h4>
                                <p>You are not allowed to access this resource.</p>
                            </div>
                        }
                    </NotAuthorized>

                    <Authorizing>
                        <div class="text-center py-5">
                            <div class="spinner-border" role="status"></div>
                            <p class="mt-3">Authorizing…</p>
                        </div>
                    </Authorizing>
                </AuthorizeRouteView>
            }
        </Found>

        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="alert alert-warning">
                    <h3>Page not found</h3>
                    <p>Sorry, there’s nothing at this address.</p>
                </div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    // Router needs to know about the extra assembly that contains
    // RemoteAuthenticatorView so it can route /authentication/*.
    private static readonly IEnumerable<Assembly> _extraAssemblies =
        new[] { typeof(RemoteAuthenticatorView).Assembly };
}
