@page "/games/{id:guid}"
@using System.Net.Http.Json
@using web_backend.Games
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="container">
    @if (game == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="row mb-4">
            <div class="col">
                <h2>@game.HomeTeam vs @game.AwayTeam</h2>
                <h4>@game.EventDate.ToLongDateString() - Final Score: @game.HomeScore - @game.AwayScore</h4>
                <p>@game.Description</p>
                <p><strong>Broadcasters:</strong> @game.Broadcasters</p>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3>Game Video</h3>
                    </div>
                    <div class="card-body">
                        @if (!string.IsNullOrEmpty(game.GameUrl))
                        {
                            <video controls width="100%" class="mb-3">
                                <source src="@game.GameUrl" type="video/mp4">
                                Your browser does not support the video tag.
                            </video>
                        }
                        else
                        {
                            <p>No video available for this game.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col">
                <button class="btn btn-secondary" @onclick="NavigateBack">Back to Games</button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private GameDto game;

    protected override async Task OnInitializedAsync()
    {
        await LoadGame();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadGame();
    }

    private async Task LoadGame()
    {
        try
        {
            game = await Http.GetFromJsonAsync<GameDto>($"api/app/game/{Id}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading game: {ex.Message}");
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/gaming");
    }
}
