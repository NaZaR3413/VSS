@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using web_backend.Blazor.Client.Services

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject AuthService AuthService
@inject DebugService DebugService

<AuthorizeView>
    <Authorized>
        <div class="d-flex align-items-center">
            <div class="user-info me-3">
                Hello, @context.User.Identity?.Name
            </div>
            <button class="btn btn-outline-light btn-sm" @onclick="BeginSignOut">
                <i class="bi bi-box-arrow-right me-1"></i> Logout
            </button>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="d-flex">
            <a href="/Account/Login" class="btn btn-outline-light btn-sm me-2">
                <i class="bi bi-box-arrow-in-right me-1"></i> Login
            </a>
            <a href="/Account/Register" class="btn btn-light btn-sm">
                <i class="bi bi-person-plus me-1"></i> Register
            </a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    protected override async Task OnInitializedAsync()
    {
        await DebugService.LogAsync("LoginStatus component initialized");
        // Check if user is authenticated on component load
        await AuthService.CheckAuthenticationStatus();
    }
    
    private async Task BeginSignOut()
    {
        await DebugService.LogAsync("Logout requested");
        await AuthService.Logout();
    }
}